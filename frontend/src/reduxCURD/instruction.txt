imports :-

import {CRUDFunction} from src/reduxCURD/container.js 
import {commonReducers} from src/reduxCURD/reducer.js 
import {curdActions} from src/reduxCURD/actions.js 

Redux CURD is a flow to create a redux container , reducer and action flow with single function. it can also take custom functions.

Simple Use :

Features :-

- Automated Creation of Container , reducer , action , actionTypes for CURD

Simple CURD  function :-

-   CRUDFunction(Component, name)  - 

provide a component and name for which the container and basic variable with "name" and "names" be generated in reducer as state. basic Create Read , Update , Delete functions can be called.
these funcitons are below:-

/*"Name" and "NAME" is the second argument provided in the CURD function ( note : "Name" has first letter  capitalized for functions and "NAME" is all capitalized);*/

-function name : createName(obj) , actions name : NAME_CREATE_REQUEST ,NAME_CREATE_SUCCESS ,NAME_CREATE_FAILURE  , Type : POST , path : "name" , takes an object as arugment and sends it in body.

-function name : updateName(obj) , actions name : NAME_UPDATE_REQUEST ,NAME_UPDATE_SUCCESS ,NAME_UPDATE_FAILURE  , Type : PUSH , path : "name/" + obj._id , takes an object as arugment and sends its db _id as a paramter in path. (obj _id is used by default if no "id" arguement is given)

-function name : deleteName(obj , id) , actions name : NAME_DELETE_REQUEST ,NAME_DELETE_SUCCESS ,NAME_DELETE_FAILURE  , Type : DELETE , path : "name/" + obj._id , takes an object as arugment and sends its db _id as a paramter in path. (obj _id is used by default if no "id" arguement is given)

-function name : readName(obj) , actions name : NAME_READ_REQUEST ,NAME_READ_SUCCESS ,NAME_READ_FAILURE  , Type : GET , path : "name" or "name/" + obj._id , if no arguement is passed , it will call just the "name" path to get all(many) or if arugment is given ,it will get specific object with obj _id as its parameter in path.

these functions can be called in your component to perform the relevant actions and communicate with server.


Advanced Use And Detail:

Features :-

- Automated Creation of Container , reducer , action , actionTypes for CURD
- Custom Functions , Custom Reducer and Custom Variables... these three are provided in case of performing actions and updating variables state for something other then CURD action on component name variables. for example getting users state variables in Dashboard Component.


CURD function looks like this:-

-   CRUDFunction(Component, name, actionOptions, variablesList, myReducer)  - 

it takes five arguments

-Component : it is the component that you want to connect

-name : the name you want to give your item/component for example "users". the CURD actions are generated with this name , and APi calls are called on this name.

-actionOptions : by default it contains 
        actionOptions = {
            create: true,
            update: true,
            read: true,
            delete: true,
            others: {},
        }

    it is not required , if not provided , All CURD actions will be implemented , it is provided to disable any of the CURD action and also in case if there is a custom action that needs to be added. " others : {} " is a map object in which custom actions can be provided like :
    function customFunc(){
        ...
    }
    actionOptions.others["customFunc"] = customFunc;
    this will make the actionOptions object as:
    actionOptions = {
            create: true,
            update: true,
            read: true,
            delete: true,
            others: {customFunc : customFunc},
        }
    the custom actions can then be called  and dispatched from the component. the variable to update in customAction should have same name as provided in variablesList

-variablesList : it can be null or undefined, two variables will be generated in both case of null or variablesList object, these are the "name " and "names"  that is provided in second arguement. it is a single or multiple  object/s received to reducer based on the action response from the server. custom variablesList Object should not have the "name" and "names" variables for CURD , it can have variables for custom actions and from custom reducer.

-myReducer : it is a custom reducer that is provided to manage the variables from variables List and updates based on the custom actions. is can be null or undefined. 



/* FOR INFORMATION ABOUT CURD FUNCTION */

saveContainer(container , name) is a function to save the container so it wont generate again.;
containerExistCheck(container) is a function that will check if the container is already generated , if not: it will generate the container and save it.
existingContainers is an object which contains the generated containers.