// Generated by view binder compiler. Do not edit!
package com.app.ps19.elecapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.app.ps19.elecapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDebugBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnArray;

  @NonNull
  public final Button btnNull;

  @NonNull
  public final Button btnNumber;

  private ActivityDebugBinding(@NonNull LinearLayout rootView, @NonNull Button btnArray,
      @NonNull Button btnNull, @NonNull Button btnNumber) {
    this.rootView = rootView;
    this.btnArray = btnArray;
    this.btnNull = btnNull;
    this.btnNumber = btnNumber;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDebugBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDebugBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_debug, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDebugBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_array;
      Button btnArray = rootView.findViewById(id);
      if (btnArray == null) {
        break missingId;
      }

      id = R.id.btn_null;
      Button btnNull = rootView.findViewById(id);
      if (btnNull == null) {
        break missingId;
      }

      id = R.id.btn_number;
      Button btnNumber = rootView.findViewById(id);
      if (btnNumber == null) {
        break missingId;
      }

      return new ActivityDebugBinding((LinearLayout) rootView, btnArray, btnNull, btnNumber);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
