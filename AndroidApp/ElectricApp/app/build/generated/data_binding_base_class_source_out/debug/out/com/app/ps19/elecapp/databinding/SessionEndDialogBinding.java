// Generated by view binder compiler. Do not edit!
package com.app.ps19.elecapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.app.ps19.elecapp.R;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class SessionEndDialogBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final EditText etSessionEndMp;

  @NonNull
  public final EditText etStartSessionMp;

  @NonNull
  public final ImageView ivSessionsDialogTitle;

  @NonNull
  public final LinearLayout llLimitInput;

  @NonNull
  public final LinearLayout llLine;

  @NonNull
  public final LinearLayout llTraverseTrack;

  @NonNull
  public final RelativeLayout rlSessionsDialogTitle;

  @NonNull
  public final TextInputLayout tiEndMp;

  @NonNull
  public final TextInputLayout tiStartMp;

  @NonNull
  public final TextView tvLocName;

  @NonNull
  public final TextView tvMpUnitFrom;

  @NonNull
  public final TextView tvMpUnitTo;

  @NonNull
  public final TextView tvObserveTrackMsg;

  @NonNull
  public final TextView tvSelectedObserveTrack;

  @NonNull
  public final TextView tvSelectedTraverseTrack;

  @NonNull
  public final TextView tvSessionEndDialogRangeMsg;

  @NonNull
  public final TextView tvTraverseTrackMsg;

  private SessionEndDialogBinding(@NonNull RelativeLayout rootView,
      @NonNull EditText etSessionEndMp, @NonNull EditText etStartSessionMp,
      @NonNull ImageView ivSessionsDialogTitle, @NonNull LinearLayout llLimitInput,
      @NonNull LinearLayout llLine, @NonNull LinearLayout llTraverseTrack,
      @NonNull RelativeLayout rlSessionsDialogTitle, @NonNull TextInputLayout tiEndMp,
      @NonNull TextInputLayout tiStartMp, @NonNull TextView tvLocName,
      @NonNull TextView tvMpUnitFrom, @NonNull TextView tvMpUnitTo,
      @NonNull TextView tvObserveTrackMsg, @NonNull TextView tvSelectedObserveTrack,
      @NonNull TextView tvSelectedTraverseTrack, @NonNull TextView tvSessionEndDialogRangeMsg,
      @NonNull TextView tvTraverseTrackMsg) {
    this.rootView = rootView;
    this.etSessionEndMp = etSessionEndMp;
    this.etStartSessionMp = etStartSessionMp;
    this.ivSessionsDialogTitle = ivSessionsDialogTitle;
    this.llLimitInput = llLimitInput;
    this.llLine = llLine;
    this.llTraverseTrack = llTraverseTrack;
    this.rlSessionsDialogTitle = rlSessionsDialogTitle;
    this.tiEndMp = tiEndMp;
    this.tiStartMp = tiStartMp;
    this.tvLocName = tvLocName;
    this.tvMpUnitFrom = tvMpUnitFrom;
    this.tvMpUnitTo = tvMpUnitTo;
    this.tvObserveTrackMsg = tvObserveTrackMsg;
    this.tvSelectedObserveTrack = tvSelectedObserveTrack;
    this.tvSelectedTraverseTrack = tvSelectedTraverseTrack;
    this.tvSessionEndDialogRangeMsg = tvSessionEndDialogRangeMsg;
    this.tvTraverseTrackMsg = tvTraverseTrackMsg;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SessionEndDialogBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SessionEndDialogBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.session_end_dialog, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SessionEndDialogBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.et_session_end_mp;
      EditText etSessionEndMp = rootView.findViewById(id);
      if (etSessionEndMp == null) {
        break missingId;
      }

      id = R.id.et_start_session_mp;
      EditText etStartSessionMp = rootView.findViewById(id);
      if (etStartSessionMp == null) {
        break missingId;
      }

      id = R.id.iv_sessions_dialog_title;
      ImageView ivSessionsDialogTitle = rootView.findViewById(id);
      if (ivSessionsDialogTitle == null) {
        break missingId;
      }

      id = R.id.ll_limit_input;
      LinearLayout llLimitInput = rootView.findViewById(id);
      if (llLimitInput == null) {
        break missingId;
      }

      id = R.id.ll_line;
      LinearLayout llLine = rootView.findViewById(id);
      if (llLine == null) {
        break missingId;
      }

      id = R.id.ll_traverse_track;
      LinearLayout llTraverseTrack = rootView.findViewById(id);
      if (llTraverseTrack == null) {
        break missingId;
      }

      id = R.id.rl_sessions_dialog_title;
      RelativeLayout rlSessionsDialogTitle = rootView.findViewById(id);
      if (rlSessionsDialogTitle == null) {
        break missingId;
      }

      id = R.id.ti_end_mp;
      TextInputLayout tiEndMp = rootView.findViewById(id);
      if (tiEndMp == null) {
        break missingId;
      }

      id = R.id.ti_start_mp;
      TextInputLayout tiStartMp = rootView.findViewById(id);
      if (tiStartMp == null) {
        break missingId;
      }

      id = R.id.tv_loc_name;
      TextView tvLocName = rootView.findViewById(id);
      if (tvLocName == null) {
        break missingId;
      }

      id = R.id.tv_mp_unit_from;
      TextView tvMpUnitFrom = rootView.findViewById(id);
      if (tvMpUnitFrom == null) {
        break missingId;
      }

      id = R.id.tv_mp_unit_to;
      TextView tvMpUnitTo = rootView.findViewById(id);
      if (tvMpUnitTo == null) {
        break missingId;
      }

      id = R.id.tv_observe_track_msg;
      TextView tvObserveTrackMsg = rootView.findViewById(id);
      if (tvObserveTrackMsg == null) {
        break missingId;
      }

      id = R.id.tv_selected_observe_track;
      TextView tvSelectedObserveTrack = rootView.findViewById(id);
      if (tvSelectedObserveTrack == null) {
        break missingId;
      }

      id = R.id.tv_selected_traverse_track;
      TextView tvSelectedTraverseTrack = rootView.findViewById(id);
      if (tvSelectedTraverseTrack == null) {
        break missingId;
      }

      id = R.id.tv_session_end_dialog_range_msg;
      TextView tvSessionEndDialogRangeMsg = rootView.findViewById(id);
      if (tvSessionEndDialogRangeMsg == null) {
        break missingId;
      }

      id = R.id.tv_traverse_track_msg;
      TextView tvTraverseTrackMsg = rootView.findViewById(id);
      if (tvTraverseTrackMsg == null) {
        break missingId;
      }

      return new SessionEndDialogBinding((RelativeLayout) rootView, etSessionEndMp,
          etStartSessionMp, ivSessionsDialogTitle, llLimitInput, llLine, llTraverseTrack,
          rlSessionsDialogTitle, tiEndMp, tiStartMp, tvLocName, tvMpUnitFrom, tvMpUnitTo,
          tvObserveTrackMsg, tvSelectedObserveTrack, tvSelectedTraverseTrack,
          tvSessionEndDialogRangeMsg, tvTraverseTrackMsg);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
