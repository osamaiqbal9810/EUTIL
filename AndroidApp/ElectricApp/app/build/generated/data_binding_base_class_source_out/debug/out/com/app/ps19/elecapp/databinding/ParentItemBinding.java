// Generated by view binder compiler. Do not edit!
package com.app.ps19.elecapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.app.ps19.elecapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ParentItemBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView imgStartPlanPi;

  @NonNull
  public final TextView tvParent;

  @NonNull
  public final View viewParent;

  private ParentItemBinding(@NonNull LinearLayout rootView, @NonNull ImageView imgStartPlanPi,
      @NonNull TextView tvParent, @NonNull View viewParent) {
    this.rootView = rootView;
    this.imgStartPlanPi = imgStartPlanPi;
    this.tvParent = tvParent;
    this.viewParent = viewParent;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ParentItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ParentItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.parent_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ParentItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.img_start_plan_pi;
      ImageView imgStartPlanPi = rootView.findViewById(id);
      if (imgStartPlanPi == null) {
        break missingId;
      }

      id = R.id.tvParent;
      TextView tvParent = rootView.findViewById(id);
      if (tvParent == null) {
        break missingId;
      }

      id = R.id.viewParent;
      View viewParent = rootView.findViewById(id);
      if (viewParent == null) {
        break missingId;
      }

      return new ParentItemBinding((LinearLayout) rootView, imgStartPlanPi, tvParent, viewParent);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
