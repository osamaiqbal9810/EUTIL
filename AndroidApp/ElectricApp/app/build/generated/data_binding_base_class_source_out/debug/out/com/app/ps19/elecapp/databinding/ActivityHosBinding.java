// Generated by view binder compiler. Do not edit!
package com.app.ps19.elecapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.app.ps19.elecapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityHosBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnSignIn;

  @NonNull
  public final ImageView ivMilepostTitle;

  @NonNull
  public final ImageView ivTodayTitle;

  @NonNull
  public final LinearLayout llLimitInput;

  @NonNull
  public final LinearLayout llTodayDateHours;

  @NonNull
  public final LinearLayout llTraverseTrack;

  @NonNull
  public final ListView lvHosEntries;

  @NonNull
  public final RelativeLayout rlLocationInfoTitle;

  @NonNull
  public final RelativeLayout rlTodayInfoTitle;

  @NonNull
  public final TextView tvMileHeading;

  @NonNull
  public final TextView tvSignedTime;

  @NonNull
  public final TextView tvTodayDate;

  @NonNull
  public final TextView tvTodayHeading;

  @NonNull
  public final TextView tvTodayHours;

  @NonNull
  public final TextView tvYesterdayDate;

  @NonNull
  public final TextView tvYesterdayHours;

  @NonNull
  public final TextView tvYesterdaySignedIn;

  @NonNull
  public final TextView tvYesterdaySignedOut;

  private ActivityHosBinding(@NonNull LinearLayout rootView, @NonNull Button btnSignIn,
      @NonNull ImageView ivMilepostTitle, @NonNull ImageView ivTodayTitle,
      @NonNull LinearLayout llLimitInput, @NonNull LinearLayout llTodayDateHours,
      @NonNull LinearLayout llTraverseTrack, @NonNull ListView lvHosEntries,
      @NonNull RelativeLayout rlLocationInfoTitle, @NonNull RelativeLayout rlTodayInfoTitle,
      @NonNull TextView tvMileHeading, @NonNull TextView tvSignedTime,
      @NonNull TextView tvTodayDate, @NonNull TextView tvTodayHeading,
      @NonNull TextView tvTodayHours, @NonNull TextView tvYesterdayDate,
      @NonNull TextView tvYesterdayHours, @NonNull TextView tvYesterdaySignedIn,
      @NonNull TextView tvYesterdaySignedOut) {
    this.rootView = rootView;
    this.btnSignIn = btnSignIn;
    this.ivMilepostTitle = ivMilepostTitle;
    this.ivTodayTitle = ivTodayTitle;
    this.llLimitInput = llLimitInput;
    this.llTodayDateHours = llTodayDateHours;
    this.llTraverseTrack = llTraverseTrack;
    this.lvHosEntries = lvHosEntries;
    this.rlLocationInfoTitle = rlLocationInfoTitle;
    this.rlTodayInfoTitle = rlTodayInfoTitle;
    this.tvMileHeading = tvMileHeading;
    this.tvSignedTime = tvSignedTime;
    this.tvTodayDate = tvTodayDate;
    this.tvTodayHeading = tvTodayHeading;
    this.tvTodayHours = tvTodayHours;
    this.tvYesterdayDate = tvYesterdayDate;
    this.tvYesterdayHours = tvYesterdayHours;
    this.tvYesterdaySignedIn = tvYesterdaySignedIn;
    this.tvYesterdaySignedOut = tvYesterdaySignedOut;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityHosBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityHosBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_hos, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityHosBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_sign_in;
      Button btnSignIn = rootView.findViewById(id);
      if (btnSignIn == null) {
        break missingId;
      }

      id = R.id.iv_milepost_title;
      ImageView ivMilepostTitle = rootView.findViewById(id);
      if (ivMilepostTitle == null) {
        break missingId;
      }

      id = R.id.iv_today_title;
      ImageView ivTodayTitle = rootView.findViewById(id);
      if (ivTodayTitle == null) {
        break missingId;
      }

      id = R.id.ll_limit_input;
      LinearLayout llLimitInput = rootView.findViewById(id);
      if (llLimitInput == null) {
        break missingId;
      }

      id = R.id.ll_today_date_hours;
      LinearLayout llTodayDateHours = rootView.findViewById(id);
      if (llTodayDateHours == null) {
        break missingId;
      }

      id = R.id.ll_traverse_track;
      LinearLayout llTraverseTrack = rootView.findViewById(id);
      if (llTraverseTrack == null) {
        break missingId;
      }

      id = R.id.lv_hos_entries;
      ListView lvHosEntries = rootView.findViewById(id);
      if (lvHosEntries == null) {
        break missingId;
      }

      id = R.id.rl_location_info_title;
      RelativeLayout rlLocationInfoTitle = rootView.findViewById(id);
      if (rlLocationInfoTitle == null) {
        break missingId;
      }

      id = R.id.rl_today_info_title;
      RelativeLayout rlTodayInfoTitle = rootView.findViewById(id);
      if (rlTodayInfoTitle == null) {
        break missingId;
      }

      id = R.id.tv_mile_heading;
      TextView tvMileHeading = rootView.findViewById(id);
      if (tvMileHeading == null) {
        break missingId;
      }

      id = R.id.tv_signed_time;
      TextView tvSignedTime = rootView.findViewById(id);
      if (tvSignedTime == null) {
        break missingId;
      }

      id = R.id.tv_today_date;
      TextView tvTodayDate = rootView.findViewById(id);
      if (tvTodayDate == null) {
        break missingId;
      }

      id = R.id.tv_today_heading;
      TextView tvTodayHeading = rootView.findViewById(id);
      if (tvTodayHeading == null) {
        break missingId;
      }

      id = R.id.tv_today_hours;
      TextView tvTodayHours = rootView.findViewById(id);
      if (tvTodayHours == null) {
        break missingId;
      }

      id = R.id.tv_yesterday_date;
      TextView tvYesterdayDate = rootView.findViewById(id);
      if (tvYesterdayDate == null) {
        break missingId;
      }

      id = R.id.tv_yesterday_hours;
      TextView tvYesterdayHours = rootView.findViewById(id);
      if (tvYesterdayHours == null) {
        break missingId;
      }

      id = R.id.tv_yesterday_signed_in;
      TextView tvYesterdaySignedIn = rootView.findViewById(id);
      if (tvYesterdaySignedIn == null) {
        break missingId;
      }

      id = R.id.tv_yesterday_signed_out;
      TextView tvYesterdaySignedOut = rootView.findViewById(id);
      if (tvYesterdaySignedOut == null) {
        break missingId;
      }

      return new ActivityHosBinding((LinearLayout) rootView, btnSignIn, ivMilepostTitle,
          ivTodayTitle, llLimitInput, llTodayDateHours, llTraverseTrack, lvHosEntries,
          rlLocationInfoTitle, rlTodayInfoTitle, tvMileHeading, tvSignedTime, tvTodayDate,
          tvTodayHeading, tvTodayHours, tvYesterdayDate, tvYesterdayHours, tvYesterdaySignedIn,
          tvYesterdaySignedOut);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
