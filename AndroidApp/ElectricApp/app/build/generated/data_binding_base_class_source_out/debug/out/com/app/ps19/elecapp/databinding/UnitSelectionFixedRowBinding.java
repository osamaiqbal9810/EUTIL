// Generated by view binder compiler. Do not edit!
package com.app.ps19.elecapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.app.ps19.elecapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class UnitSelectionFixedRowBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView ivProceedAssetSelection;

  @NonNull
  public final ImageView ivUnitTitle;

  @NonNull
  public final LinearLayout llAssetCounter;

  @NonNull
  public final ConstraintLayout relativeLayout2;

  @NonNull
  public final TextView tvAssetDescription;

  @NonNull
  public final TextView tvAssetIssueCount;

  @NonNull
  public final TextView tvAssetIssueCountTitle;

  @NonNull
  public final TextView tvAssetName;

  private UnitSelectionFixedRowBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView ivProceedAssetSelection, @NonNull ImageView ivUnitTitle,
      @NonNull LinearLayout llAssetCounter, @NonNull ConstraintLayout relativeLayout2,
      @NonNull TextView tvAssetDescription, @NonNull TextView tvAssetIssueCount,
      @NonNull TextView tvAssetIssueCountTitle, @NonNull TextView tvAssetName) {
    this.rootView = rootView;
    this.ivProceedAssetSelection = ivProceedAssetSelection;
    this.ivUnitTitle = ivUnitTitle;
    this.llAssetCounter = llAssetCounter;
    this.relativeLayout2 = relativeLayout2;
    this.tvAssetDescription = tvAssetDescription;
    this.tvAssetIssueCount = tvAssetIssueCount;
    this.tvAssetIssueCountTitle = tvAssetIssueCountTitle;
    this.tvAssetName = tvAssetName;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static UnitSelectionFixedRowBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static UnitSelectionFixedRowBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.unit_selection_fixed_row, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static UnitSelectionFixedRowBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.iv_proceed_asset_selection;
      ImageView ivProceedAssetSelection = rootView.findViewById(id);
      if (ivProceedAssetSelection == null) {
        break missingId;
      }

      id = R.id.iv_unit_title;
      ImageView ivUnitTitle = rootView.findViewById(id);
      if (ivUnitTitle == null) {
        break missingId;
      }

      id = R.id.ll_asset_counter;
      LinearLayout llAssetCounter = rootView.findViewById(id);
      if (llAssetCounter == null) {
        break missingId;
      }

      ConstraintLayout relativeLayout2 = (ConstraintLayout) rootView;

      id = R.id.tv_asset_description;
      TextView tvAssetDescription = rootView.findViewById(id);
      if (tvAssetDescription == null) {
        break missingId;
      }

      id = R.id.tv_asset_issue_count;
      TextView tvAssetIssueCount = rootView.findViewById(id);
      if (tvAssetIssueCount == null) {
        break missingId;
      }

      id = R.id.tv_asset_issue_count_title;
      TextView tvAssetIssueCountTitle = rootView.findViewById(id);
      if (tvAssetIssueCountTitle == null) {
        break missingId;
      }

      id = R.id.tv_asset_name;
      TextView tvAssetName = rootView.findViewById(id);
      if (tvAssetName == null) {
        break missingId;
      }

      return new UnitSelectionFixedRowBinding((ConstraintLayout) rootView, ivProceedAssetSelection,
          ivUnitTitle, llAssetCounter, relativeLayout2, tvAssetDescription, tvAssetIssueCount,
          tvAssetIssueCountTitle, tvAssetName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
