// Generated by view binder compiler. Do not edit!
package com.app.ps19.elecapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.Spinner;
import android.widget.Switch;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.app.ps19.elecapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ContentReportAddBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView assetTypeTxt;

  @NonNull
  public final TextView btnCheckList;

  @NonNull
  public final ImageButton btnVoiceRecord;

  @NonNull
  public final ImageButton captureBtn;

  @NonNull
  public final EditText etMpEnd;

  @NonNull
  public final EditText etMpStart;

  @NonNull
  public final RecyclerView horizontalRecyclerView;

  @NonNull
  public final ImageButton ibtnCaptureAfterFix;

  @NonNull
  public final LinearLayout llFix;

  @NonNull
  public final LinearLayout llMpEnd;

  @NonNull
  public final LinearLayout llMpStart;

  @NonNull
  public final LinearLayout lyPictures;

  @NonNull
  public final LinearLayout lyPicturesAfterFix;

  @NonNull
  public final LinearLayout lyVoice;

  @NonNull
  public final Switch markedSwitch;

  @NonNull
  public final Spinner prioritySpinner;

  @NonNull
  public final RadioButton rbPermanentFix;

  @NonNull
  public final RadioButton rbTempFix;

  @NonNull
  public final RecyclerView recyclerPicsAfterFix;

  @NonNull
  public final EditText reportDescriptionTxt;

  @NonNull
  public final RadioGroup rgFixType;

  @NonNull
  public final RecyclerView rvVoice;

  @NonNull
  public final Button saveBtn;

  @NonNull
  public final TextView textView15;

  @NonNull
  public final TextView textView16;

  @NonNull
  public final TextView textView19;

  @NonNull
  public final TextView textView22;

  @NonNull
  public final TextView textView23;

  @NonNull
  public final TextView tvPicHeading;

  @NonNull
  public final TextView tvPicHeadingAfterFix;

  @NonNull
  public final TextView tvReportAssetSelectionName;

  @NonNull
  public final TextView tvTitleMpEnd;

  @NonNull
  public final TextView tvTitleMpStart;

  @NonNull
  public final TextView tvVoiceHeading;

  private ContentReportAddBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView assetTypeTxt, @NonNull TextView btnCheckList,
      @NonNull ImageButton btnVoiceRecord, @NonNull ImageButton captureBtn,
      @NonNull EditText etMpEnd, @NonNull EditText etMpStart,
      @NonNull RecyclerView horizontalRecyclerView, @NonNull ImageButton ibtnCaptureAfterFix,
      @NonNull LinearLayout llFix, @NonNull LinearLayout llMpEnd, @NonNull LinearLayout llMpStart,
      @NonNull LinearLayout lyPictures, @NonNull LinearLayout lyPicturesAfterFix,
      @NonNull LinearLayout lyVoice, @NonNull Switch markedSwitch, @NonNull Spinner prioritySpinner,
      @NonNull RadioButton rbPermanentFix, @NonNull RadioButton rbTempFix,
      @NonNull RecyclerView recyclerPicsAfterFix, @NonNull EditText reportDescriptionTxt,
      @NonNull RadioGroup rgFixType, @NonNull RecyclerView rvVoice, @NonNull Button saveBtn,
      @NonNull TextView textView15, @NonNull TextView textView16, @NonNull TextView textView19,
      @NonNull TextView textView22, @NonNull TextView textView23, @NonNull TextView tvPicHeading,
      @NonNull TextView tvPicHeadingAfterFix, @NonNull TextView tvReportAssetSelectionName,
      @NonNull TextView tvTitleMpEnd, @NonNull TextView tvTitleMpStart,
      @NonNull TextView tvVoiceHeading) {
    this.rootView = rootView;
    this.assetTypeTxt = assetTypeTxt;
    this.btnCheckList = btnCheckList;
    this.btnVoiceRecord = btnVoiceRecord;
    this.captureBtn = captureBtn;
    this.etMpEnd = etMpEnd;
    this.etMpStart = etMpStart;
    this.horizontalRecyclerView = horizontalRecyclerView;
    this.ibtnCaptureAfterFix = ibtnCaptureAfterFix;
    this.llFix = llFix;
    this.llMpEnd = llMpEnd;
    this.llMpStart = llMpStart;
    this.lyPictures = lyPictures;
    this.lyPicturesAfterFix = lyPicturesAfterFix;
    this.lyVoice = lyVoice;
    this.markedSwitch = markedSwitch;
    this.prioritySpinner = prioritySpinner;
    this.rbPermanentFix = rbPermanentFix;
    this.rbTempFix = rbTempFix;
    this.recyclerPicsAfterFix = recyclerPicsAfterFix;
    this.reportDescriptionTxt = reportDescriptionTxt;
    this.rgFixType = rgFixType;
    this.rvVoice = rvVoice;
    this.saveBtn = saveBtn;
    this.textView15 = textView15;
    this.textView16 = textView16;
    this.textView19 = textView19;
    this.textView22 = textView22;
    this.textView23 = textView23;
    this.tvPicHeading = tvPicHeading;
    this.tvPicHeadingAfterFix = tvPicHeadingAfterFix;
    this.tvReportAssetSelectionName = tvReportAssetSelectionName;
    this.tvTitleMpEnd = tvTitleMpEnd;
    this.tvTitleMpStart = tvTitleMpStart;
    this.tvVoiceHeading = tvVoiceHeading;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ContentReportAddBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ContentReportAddBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.content_report_add, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ContentReportAddBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.assetTypeTxt;
      TextView assetTypeTxt = rootView.findViewById(id);
      if (assetTypeTxt == null) {
        break missingId;
      }

      id = R.id.btnCheckList;
      TextView btnCheckList = rootView.findViewById(id);
      if (btnCheckList == null) {
        break missingId;
      }

      id = R.id.btn_voice_record;
      ImageButton btnVoiceRecord = rootView.findViewById(id);
      if (btnVoiceRecord == null) {
        break missingId;
      }

      id = R.id.captureBtn;
      ImageButton captureBtn = rootView.findViewById(id);
      if (captureBtn == null) {
        break missingId;
      }

      id = R.id.et_mp_end;
      EditText etMpEnd = rootView.findViewById(id);
      if (etMpEnd == null) {
        break missingId;
      }

      id = R.id.et_mp_start;
      EditText etMpStart = rootView.findViewById(id);
      if (etMpStart == null) {
        break missingId;
      }

      id = R.id.horizontal_recycler_view;
      RecyclerView horizontalRecyclerView = rootView.findViewById(id);
      if (horizontalRecyclerView == null) {
        break missingId;
      }

      id = R.id.ibtn_capture_after_fix;
      ImageButton ibtnCaptureAfterFix = rootView.findViewById(id);
      if (ibtnCaptureAfterFix == null) {
        break missingId;
      }

      id = R.id.ll_fix;
      LinearLayout llFix = rootView.findViewById(id);
      if (llFix == null) {
        break missingId;
      }

      id = R.id.ll_mp_end;
      LinearLayout llMpEnd = rootView.findViewById(id);
      if (llMpEnd == null) {
        break missingId;
      }

      id = R.id.ll_mp_start;
      LinearLayout llMpStart = rootView.findViewById(id);
      if (llMpStart == null) {
        break missingId;
      }

      id = R.id.ly_pictures;
      LinearLayout lyPictures = rootView.findViewById(id);
      if (lyPictures == null) {
        break missingId;
      }

      id = R.id.ly_pictures_after_fix;
      LinearLayout lyPicturesAfterFix = rootView.findViewById(id);
      if (lyPicturesAfterFix == null) {
        break missingId;
      }

      id = R.id.ly_voice;
      LinearLayout lyVoice = rootView.findViewById(id);
      if (lyVoice == null) {
        break missingId;
      }

      id = R.id.markedSwitch;
      Switch markedSwitch = rootView.findViewById(id);
      if (markedSwitch == null) {
        break missingId;
      }

      id = R.id.prioritySpinner;
      Spinner prioritySpinner = rootView.findViewById(id);
      if (prioritySpinner == null) {
        break missingId;
      }

      id = R.id.rb_permanent_fix;
      RadioButton rbPermanentFix = rootView.findViewById(id);
      if (rbPermanentFix == null) {
        break missingId;
      }

      id = R.id.rb_temp_fix;
      RadioButton rbTempFix = rootView.findViewById(id);
      if (rbTempFix == null) {
        break missingId;
      }

      id = R.id.recycler_pics_after_fix;
      RecyclerView recyclerPicsAfterFix = rootView.findViewById(id);
      if (recyclerPicsAfterFix == null) {
        break missingId;
      }

      id = R.id.reportDescriptionTxt;
      EditText reportDescriptionTxt = rootView.findViewById(id);
      if (reportDescriptionTxt == null) {
        break missingId;
      }

      id = R.id.rg_fix_type;
      RadioGroup rgFixType = rootView.findViewById(id);
      if (rgFixType == null) {
        break missingId;
      }

      id = R.id.rv_voice;
      RecyclerView rvVoice = rootView.findViewById(id);
      if (rvVoice == null) {
        break missingId;
      }

      id = R.id.saveBtn;
      Button saveBtn = rootView.findViewById(id);
      if (saveBtn == null) {
        break missingId;
      }

      id = R.id.textView15;
      TextView textView15 = rootView.findViewById(id);
      if (textView15 == null) {
        break missingId;
      }

      id = R.id.textView16;
      TextView textView16 = rootView.findViewById(id);
      if (textView16 == null) {
        break missingId;
      }

      id = R.id.textView19;
      TextView textView19 = rootView.findViewById(id);
      if (textView19 == null) {
        break missingId;
      }

      id = R.id.textView22;
      TextView textView22 = rootView.findViewById(id);
      if (textView22 == null) {
        break missingId;
      }

      id = R.id.textView23;
      TextView textView23 = rootView.findViewById(id);
      if (textView23 == null) {
        break missingId;
      }

      id = R.id.tv_pic_heading;
      TextView tvPicHeading = rootView.findViewById(id);
      if (tvPicHeading == null) {
        break missingId;
      }

      id = R.id.tv_pic_heading_after_fix;
      TextView tvPicHeadingAfterFix = rootView.findViewById(id);
      if (tvPicHeadingAfterFix == null) {
        break missingId;
      }

      id = R.id.tv_report_asset_selection_name;
      TextView tvReportAssetSelectionName = rootView.findViewById(id);
      if (tvReportAssetSelectionName == null) {
        break missingId;
      }

      id = R.id.tv_title_mp_end;
      TextView tvTitleMpEnd = rootView.findViewById(id);
      if (tvTitleMpEnd == null) {
        break missingId;
      }

      id = R.id.tv_title_mp_start;
      TextView tvTitleMpStart = rootView.findViewById(id);
      if (tvTitleMpStart == null) {
        break missingId;
      }

      id = R.id.tv_voice_heading;
      TextView tvVoiceHeading = rootView.findViewById(id);
      if (tvVoiceHeading == null) {
        break missingId;
      }

      return new ContentReportAddBinding((ConstraintLayout) rootView, assetTypeTxt, btnCheckList,
          btnVoiceRecord, captureBtn, etMpEnd, etMpStart, horizontalRecyclerView,
          ibtnCaptureAfterFix, llFix, llMpEnd, llMpStart, lyPictures, lyPicturesAfterFix, lyVoice,
          markedSwitch, prioritySpinner, rbPermanentFix, rbTempFix, recyclerPicsAfterFix,
          reportDescriptionTxt, rgFixType, rvVoice, saveBtn, textView15, textView16, textView19,
          textView22, textView23, tvPicHeading, tvPicHeadingAfterFix, tvReportAssetSelectionName,
          tvTitleMpEnd, tvTitleMpStart, tvVoiceHeading);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
