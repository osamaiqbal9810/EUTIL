// Generated by view binder compiler. Do not edit!
package com.app.ps19.elecapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.RelativeLayout;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.app.ps19.elecapp.R;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentIssuesNewBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final View divider;

  @NonNull
  public final FloatingActionButton fabAddIssue;

  @NonNull
  public final ImageView fixAssetLocationEdit;

  @NonNull
  public final ImageButton ibDefectsListExpand;

  @NonNull
  public final ImageButton ibFixedAsset;

  @NonNull
  public final ImageButton ibLinearAsset;

  @NonNull
  public final ImageButton ibSwitchInsp;

  @NonNull
  public final LinearLayout infoLayout;

  @NonNull
  public final ImageView ivFixedTitle;

  @NonNull
  public final ImageView ivIssuesTitle;

  @NonNull
  public final ImageView ivLinearTitle;

  @NonNull
  public final ImageView ivSwitchTitle;

  @NonNull
  public final LinearLayout llFixedAsset;

  @NonNull
  public final LinearLayout llFixedAssetContainer;

  @NonNull
  public final LinearLayout llLinearAsset;

  @NonNull
  public final LinearLayout llLinearAssetContainer;

  @NonNull
  public final LinearLayout llSwitchInsp;

  @NonNull
  public final LinearLayout llSwitchInspContainer;

  @NonNull
  public final ListView reportsList;

  @NonNull
  public final RelativeLayout rlLocationTitle;

  @NonNull
  public final Spinner spFixedAsset;

  @NonNull
  public final Spinner spLinearAsset;

  @NonNull
  public final Spinner spSwitchInsp;

  @NonNull
  public final TextView taskDescTxt;

  @NonNull
  public final TextView taskNotesTxt;

  @NonNull
  public final TextView taskTitleTxt;

  @NonNull
  public final TextView textView3;

  @NonNull
  public final TextView textView4;

  @NonNull
  public final TextView tvAddIssueHelp;

  @NonNull
  public final TextView tvDefListTitle;

  @NonNull
  public final TextView tvFixedAsset;

  @NonNull
  public final TextView tvLinearAsset;

  @NonNull
  public final TextView tvMapMode;

  @NonNull
  public final TextView tvSwitchInsp;

  private FragmentIssuesNewBinding(@NonNull RelativeLayout rootView, @NonNull View divider,
      @NonNull FloatingActionButton fabAddIssue, @NonNull ImageView fixAssetLocationEdit,
      @NonNull ImageButton ibDefectsListExpand, @NonNull ImageButton ibFixedAsset,
      @NonNull ImageButton ibLinearAsset, @NonNull ImageButton ibSwitchInsp,
      @NonNull LinearLayout infoLayout, @NonNull ImageView ivFixedTitle,
      @NonNull ImageView ivIssuesTitle, @NonNull ImageView ivLinearTitle,
      @NonNull ImageView ivSwitchTitle, @NonNull LinearLayout llFixedAsset,
      @NonNull LinearLayout llFixedAssetContainer, @NonNull LinearLayout llLinearAsset,
      @NonNull LinearLayout llLinearAssetContainer, @NonNull LinearLayout llSwitchInsp,
      @NonNull LinearLayout llSwitchInspContainer, @NonNull ListView reportsList,
      @NonNull RelativeLayout rlLocationTitle, @NonNull Spinner spFixedAsset,
      @NonNull Spinner spLinearAsset, @NonNull Spinner spSwitchInsp, @NonNull TextView taskDescTxt,
      @NonNull TextView taskNotesTxt, @NonNull TextView taskTitleTxt, @NonNull TextView textView3,
      @NonNull TextView textView4, @NonNull TextView tvAddIssueHelp,
      @NonNull TextView tvDefListTitle, @NonNull TextView tvFixedAsset,
      @NonNull TextView tvLinearAsset, @NonNull TextView tvMapMode,
      @NonNull TextView tvSwitchInsp) {
    this.rootView = rootView;
    this.divider = divider;
    this.fabAddIssue = fabAddIssue;
    this.fixAssetLocationEdit = fixAssetLocationEdit;
    this.ibDefectsListExpand = ibDefectsListExpand;
    this.ibFixedAsset = ibFixedAsset;
    this.ibLinearAsset = ibLinearAsset;
    this.ibSwitchInsp = ibSwitchInsp;
    this.infoLayout = infoLayout;
    this.ivFixedTitle = ivFixedTitle;
    this.ivIssuesTitle = ivIssuesTitle;
    this.ivLinearTitle = ivLinearTitle;
    this.ivSwitchTitle = ivSwitchTitle;
    this.llFixedAsset = llFixedAsset;
    this.llFixedAssetContainer = llFixedAssetContainer;
    this.llLinearAsset = llLinearAsset;
    this.llLinearAssetContainer = llLinearAssetContainer;
    this.llSwitchInsp = llSwitchInsp;
    this.llSwitchInspContainer = llSwitchInspContainer;
    this.reportsList = reportsList;
    this.rlLocationTitle = rlLocationTitle;
    this.spFixedAsset = spFixedAsset;
    this.spLinearAsset = spLinearAsset;
    this.spSwitchInsp = spSwitchInsp;
    this.taskDescTxt = taskDescTxt;
    this.taskNotesTxt = taskNotesTxt;
    this.taskTitleTxt = taskTitleTxt;
    this.textView3 = textView3;
    this.textView4 = textView4;
    this.tvAddIssueHelp = tvAddIssueHelp;
    this.tvDefListTitle = tvDefListTitle;
    this.tvFixedAsset = tvFixedAsset;
    this.tvLinearAsset = tvLinearAsset;
    this.tvMapMode = tvMapMode;
    this.tvSwitchInsp = tvSwitchInsp;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentIssuesNewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentIssuesNewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_issues_new, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentIssuesNewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.divider;
      View divider = rootView.findViewById(id);
      if (divider == null) {
        break missingId;
      }

      id = R.id.fabAddIssue;
      FloatingActionButton fabAddIssue = rootView.findViewById(id);
      if (fabAddIssue == null) {
        break missingId;
      }

      id = R.id.fixAssetLocationEdit;
      ImageView fixAssetLocationEdit = rootView.findViewById(id);
      if (fixAssetLocationEdit == null) {
        break missingId;
      }

      id = R.id.ib_defects_list_expand;
      ImageButton ibDefectsListExpand = rootView.findViewById(id);
      if (ibDefectsListExpand == null) {
        break missingId;
      }

      id = R.id.ib_fixed_asset;
      ImageButton ibFixedAsset = rootView.findViewById(id);
      if (ibFixedAsset == null) {
        break missingId;
      }

      id = R.id.ib_linear_asset;
      ImageButton ibLinearAsset = rootView.findViewById(id);
      if (ibLinearAsset == null) {
        break missingId;
      }

      id = R.id.ib_switch_insp;
      ImageButton ibSwitchInsp = rootView.findViewById(id);
      if (ibSwitchInsp == null) {
        break missingId;
      }

      id = R.id.infoLayout;
      LinearLayout infoLayout = rootView.findViewById(id);
      if (infoLayout == null) {
        break missingId;
      }

      id = R.id.iv_fixed_title;
      ImageView ivFixedTitle = rootView.findViewById(id);
      if (ivFixedTitle == null) {
        break missingId;
      }

      id = R.id.iv_issues_title;
      ImageView ivIssuesTitle = rootView.findViewById(id);
      if (ivIssuesTitle == null) {
        break missingId;
      }

      id = R.id.iv_linear_title;
      ImageView ivLinearTitle = rootView.findViewById(id);
      if (ivLinearTitle == null) {
        break missingId;
      }

      id = R.id.iv_switch_title;
      ImageView ivSwitchTitle = rootView.findViewById(id);
      if (ivSwitchTitle == null) {
        break missingId;
      }

      id = R.id.ll_fixed_asset;
      LinearLayout llFixedAsset = rootView.findViewById(id);
      if (llFixedAsset == null) {
        break missingId;
      }

      id = R.id.ll_fixed_asset_container;
      LinearLayout llFixedAssetContainer = rootView.findViewById(id);
      if (llFixedAssetContainer == null) {
        break missingId;
      }

      id = R.id.ll_linear_asset;
      LinearLayout llLinearAsset = rootView.findViewById(id);
      if (llLinearAsset == null) {
        break missingId;
      }

      id = R.id.ll_linear_asset_container;
      LinearLayout llLinearAssetContainer = rootView.findViewById(id);
      if (llLinearAssetContainer == null) {
        break missingId;
      }

      id = R.id.ll_switch_insp;
      LinearLayout llSwitchInsp = rootView.findViewById(id);
      if (llSwitchInsp == null) {
        break missingId;
      }

      id = R.id.ll_switch_insp_container;
      LinearLayout llSwitchInspContainer = rootView.findViewById(id);
      if (llSwitchInspContainer == null) {
        break missingId;
      }

      id = R.id.reportsList;
      ListView reportsList = rootView.findViewById(id);
      if (reportsList == null) {
        break missingId;
      }

      id = R.id.rl_location_title;
      RelativeLayout rlLocationTitle = rootView.findViewById(id);
      if (rlLocationTitle == null) {
        break missingId;
      }

      id = R.id.sp_fixed_asset;
      Spinner spFixedAsset = rootView.findViewById(id);
      if (spFixedAsset == null) {
        break missingId;
      }

      id = R.id.sp_linear_asset;
      Spinner spLinearAsset = rootView.findViewById(id);
      if (spLinearAsset == null) {
        break missingId;
      }

      id = R.id.sp_switch_insp;
      Spinner spSwitchInsp = rootView.findViewById(id);
      if (spSwitchInsp == null) {
        break missingId;
      }

      id = R.id.taskDescTxt;
      TextView taskDescTxt = rootView.findViewById(id);
      if (taskDescTxt == null) {
        break missingId;
      }

      id = R.id.taskNotesTxt;
      TextView taskNotesTxt = rootView.findViewById(id);
      if (taskNotesTxt == null) {
        break missingId;
      }

      id = R.id.taskTitleTxt;
      TextView taskTitleTxt = rootView.findViewById(id);
      if (taskTitleTxt == null) {
        break missingId;
      }

      id = R.id.textView3;
      TextView textView3 = rootView.findViewById(id);
      if (textView3 == null) {
        break missingId;
      }

      id = R.id.textView4;
      TextView textView4 = rootView.findViewById(id);
      if (textView4 == null) {
        break missingId;
      }

      id = R.id.tvAddIssueHelp;
      TextView tvAddIssueHelp = rootView.findViewById(id);
      if (tvAddIssueHelp == null) {
        break missingId;
      }

      id = R.id.tv_def_list_title;
      TextView tvDefListTitle = rootView.findViewById(id);
      if (tvDefListTitle == null) {
        break missingId;
      }

      id = R.id.tv_fixed_asset;
      TextView tvFixedAsset = rootView.findViewById(id);
      if (tvFixedAsset == null) {
        break missingId;
      }

      id = R.id.tv_linear_asset;
      TextView tvLinearAsset = rootView.findViewById(id);
      if (tvLinearAsset == null) {
        break missingId;
      }

      id = R.id.tv_map_mode;
      TextView tvMapMode = rootView.findViewById(id);
      if (tvMapMode == null) {
        break missingId;
      }

      id = R.id.tv_switch_insp;
      TextView tvSwitchInsp = rootView.findViewById(id);
      if (tvSwitchInsp == null) {
        break missingId;
      }

      return new FragmentIssuesNewBinding((RelativeLayout) rootView, divider, fabAddIssue,
          fixAssetLocationEdit, ibDefectsListExpand, ibFixedAsset, ibLinearAsset, ibSwitchInsp,
          infoLayout, ivFixedTitle, ivIssuesTitle, ivLinearTitle, ivSwitchTitle, llFixedAsset,
          llFixedAssetContainer, llLinearAsset, llLinearAssetContainer, llSwitchInsp,
          llSwitchInspContainer, reportsList, rlLocationTitle, spFixedAsset, spLinearAsset,
          spSwitchInsp, taskDescTxt, taskNotesTxt, taskTitleTxt, textView3, textView4,
          tvAddIssueHelp, tvDefListTitle, tvFixedAsset, tvLinearAsset, tvMapMode, tvSwitchInsp);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
