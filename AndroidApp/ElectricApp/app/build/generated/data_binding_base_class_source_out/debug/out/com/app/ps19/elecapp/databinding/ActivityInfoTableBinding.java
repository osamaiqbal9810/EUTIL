// Generated by view binder compiler. Do not edit!
package com.app.ps19.elecapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.Spinner;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import com.app.ps19.elecapp.R;
import com.google.android.material.appbar.AppBarLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityInfoTableBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final AppBarLayout appbar;

  @NonNull
  public final Spinner infoTableSpinner;

  @NonNull
  public final WebView infoTableWebView;

  @NonNull
  public final Toolbar tbInfoTables;

  private ActivityInfoTableBinding(@NonNull CoordinatorLayout rootView,
      @NonNull AppBarLayout appbar, @NonNull Spinner infoTableSpinner,
      @NonNull WebView infoTableWebView, @NonNull Toolbar tbInfoTables) {
    this.rootView = rootView;
    this.appbar = appbar;
    this.infoTableSpinner = infoTableSpinner;
    this.infoTableWebView = infoTableWebView;
    this.tbInfoTables = tbInfoTables;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityInfoTableBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityInfoTableBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_info_table, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityInfoTableBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appbar;
      AppBarLayout appbar = rootView.findViewById(id);
      if (appbar == null) {
        break missingId;
      }

      id = R.id.infoTableSpinner;
      Spinner infoTableSpinner = rootView.findViewById(id);
      if (infoTableSpinner == null) {
        break missingId;
      }

      id = R.id.infoTableWebView;
      WebView infoTableWebView = rootView.findViewById(id);
      if (infoTableWebView == null) {
        break missingId;
      }

      id = R.id.tbInfoTables;
      Toolbar tbInfoTables = rootView.findViewById(id);
      if (tbInfoTables == null) {
        break missingId;
      }

      return new ActivityInfoTableBinding((CoordinatorLayout) rootView, appbar, infoTableSpinner,
          infoTableWebView, tbInfoTables);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
