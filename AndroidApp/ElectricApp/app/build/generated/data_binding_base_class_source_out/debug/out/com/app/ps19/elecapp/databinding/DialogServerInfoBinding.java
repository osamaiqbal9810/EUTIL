// Generated by view binder compiler. Do not edit!
package com.app.ps19.elecapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.app.ps19.elecapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogServerInfoBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final EditText etServerDisplay;

  @NonNull
  public final EditText etServerName;

  @NonNull
  public final EditText etServerPort;

  private DialogServerInfoBinding(@NonNull RelativeLayout rootView,
      @NonNull EditText etServerDisplay, @NonNull EditText etServerName,
      @NonNull EditText etServerPort) {
    this.rootView = rootView;
    this.etServerDisplay = etServerDisplay;
    this.etServerName = etServerName;
    this.etServerPort = etServerPort;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogServerInfoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogServerInfoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_server_info, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogServerInfoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.et_server_display;
      EditText etServerDisplay = rootView.findViewById(id);
      if (etServerDisplay == null) {
        break missingId;
      }

      id = R.id.et_server_name;
      EditText etServerName = rootView.findViewById(id);
      if (etServerName == null) {
        break missingId;
      }

      id = R.id.et_server_port;
      EditText etServerPort = rootView.findViewById(id);
      if (etServerPort == null) {
        break missingId;
      }

      return new DialogServerInfoBinding((RelativeLayout) rootView, etServerDisplay, etServerName,
          etServerPort);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
