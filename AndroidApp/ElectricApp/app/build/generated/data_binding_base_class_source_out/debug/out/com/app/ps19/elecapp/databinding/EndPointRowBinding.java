// Generated by view binder compiler. Do not edit!
package com.app.ps19.elecapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.RadioButton;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.app.ps19.elecapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class EndPointRowBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnEditServer;

  @NonNull
  public final Button btnRemoveServer;

  @NonNull
  public final LinearLayout llServerInfo;

  @NonNull
  public final LinearLayout llTopLayer;

  @NonNull
  public final RadioButton rbServerSelection;

  @NonNull
  public final TextView tvDisplayName;

  @NonNull
  public final TextView tvServerName;

  @NonNull
  public final TextView tvServerPort;

  private EndPointRowBinding(@NonNull LinearLayout rootView, @NonNull Button btnEditServer,
      @NonNull Button btnRemoveServer, @NonNull LinearLayout llServerInfo,
      @NonNull LinearLayout llTopLayer, @NonNull RadioButton rbServerSelection,
      @NonNull TextView tvDisplayName, @NonNull TextView tvServerName,
      @NonNull TextView tvServerPort) {
    this.rootView = rootView;
    this.btnEditServer = btnEditServer;
    this.btnRemoveServer = btnRemoveServer;
    this.llServerInfo = llServerInfo;
    this.llTopLayer = llTopLayer;
    this.rbServerSelection = rbServerSelection;
    this.tvDisplayName = tvDisplayName;
    this.tvServerName = tvServerName;
    this.tvServerPort = tvServerPort;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static EndPointRowBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static EndPointRowBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.end_point_row, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static EndPointRowBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_edit_server;
      Button btnEditServer = rootView.findViewById(id);
      if (btnEditServer == null) {
        break missingId;
      }

      id = R.id.btn_remove_server;
      Button btnRemoveServer = rootView.findViewById(id);
      if (btnRemoveServer == null) {
        break missingId;
      }

      id = R.id.ll_server_info;
      LinearLayout llServerInfo = rootView.findViewById(id);
      if (llServerInfo == null) {
        break missingId;
      }

      id = R.id.ll_top_layer;
      LinearLayout llTopLayer = rootView.findViewById(id);
      if (llTopLayer == null) {
        break missingId;
      }

      id = R.id.rb_server_selection;
      RadioButton rbServerSelection = rootView.findViewById(id);
      if (rbServerSelection == null) {
        break missingId;
      }

      id = R.id.tv_display_name;
      TextView tvDisplayName = rootView.findViewById(id);
      if (tvDisplayName == null) {
        break missingId;
      }

      id = R.id.tv_server_name;
      TextView tvServerName = rootView.findViewById(id);
      if (tvServerName == null) {
        break missingId;
      }

      id = R.id.tv_server_port;
      TextView tvServerPort = rootView.findViewById(id);
      if (tvServerPort == null) {
        break missingId;
      }

      return new EndPointRowBinding((LinearLayout) rootView, btnEditServer, btnRemoveServer,
          llServerInfo, llTopLayer, rbServerSelection, tvDisplayName, tvServerName, tvServerPort);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
