// Generated by view binder compiler. Do not edit!
package com.app.ps19.elecapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.ScrollView;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.app.ps19.elecapp.R;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentStartInspectionBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final Button btnCancel;

  @NonNull
  public final Button btnOk;

  @NonNull
  public final EditText etInspectionTypeDescription;

  @NonNull
  public final EditText etSelectedNearbyAsset;

  @NonNull
  public final EditText etWeatherConditions;

  @NonNull
  public final EditText etWorkplanStartMp;

  @NonNull
  public final LinearLayout llInspectionType;

  @NonNull
  public final LinearLayout llMpValue;

  @NonNull
  public final LinearLayout llNearbyAssets;

  @NonNull
  public final LinearLayout llStartMp;

  @NonNull
  public final LinearLayout llTraverseTrack;

  @NonNull
  public final LinearLayout llWeatherConditions;

  @NonNull
  public final RadioButton rbActionClass1;

  @NonNull
  public final RadioButton rbActionClass2;

  @NonNull
  public final RadioButton rbInspectionType1;

  @NonNull
  public final RadioButton rbInspectionType2;

  @NonNull
  public final RadioButton rbInspectionType3;

  @NonNull
  public final RadioGroup rgInspectionType;

  @NonNull
  public final RadioGroup rgTraverseType;

  @NonNull
  public final Spinner spAssetsAhead;

  @NonNull
  public final Spinner spAssetsBehind;

  @NonNull
  public final Spinner spTemperature;

  @NonNull
  public final Spinner spTraverseTrack;

  @NonNull
  public final TextInputLayout tiStartMp;

  @NonNull
  public final TextView tvAssetAhead;

  @NonNull
  public final TextView tvAssetBehind;

  @NonNull
  public final TextView tvStartMpTitle;

  @NonNull
  public final TextView tvTempSign;

  @NonNull
  public final TextView tvTitleMpRange;

  @NonNull
  public final TextView tvTitleMsgWpStartMp;

  @NonNull
  public final TextView tvTraverseTrackMsg;

  private FragmentStartInspectionBinding(@NonNull ScrollView rootView, @NonNull Button btnCancel,
      @NonNull Button btnOk, @NonNull EditText etInspectionTypeDescription,
      @NonNull EditText etSelectedNearbyAsset, @NonNull EditText etWeatherConditions,
      @NonNull EditText etWorkplanStartMp, @NonNull LinearLayout llInspectionType,
      @NonNull LinearLayout llMpValue, @NonNull LinearLayout llNearbyAssets,
      @NonNull LinearLayout llStartMp, @NonNull LinearLayout llTraverseTrack,
      @NonNull LinearLayout llWeatherConditions, @NonNull RadioButton rbActionClass1,
      @NonNull RadioButton rbActionClass2, @NonNull RadioButton rbInspectionType1,
      @NonNull RadioButton rbInspectionType2, @NonNull RadioButton rbInspectionType3,
      @NonNull RadioGroup rgInspectionType, @NonNull RadioGroup rgTraverseType,
      @NonNull Spinner spAssetsAhead, @NonNull Spinner spAssetsBehind,
      @NonNull Spinner spTemperature, @NonNull Spinner spTraverseTrack,
      @NonNull TextInputLayout tiStartMp, @NonNull TextView tvAssetAhead,
      @NonNull TextView tvAssetBehind, @NonNull TextView tvStartMpTitle,
      @NonNull TextView tvTempSign, @NonNull TextView tvTitleMpRange,
      @NonNull TextView tvTitleMsgWpStartMp, @NonNull TextView tvTraverseTrackMsg) {
    this.rootView = rootView;
    this.btnCancel = btnCancel;
    this.btnOk = btnOk;
    this.etInspectionTypeDescription = etInspectionTypeDescription;
    this.etSelectedNearbyAsset = etSelectedNearbyAsset;
    this.etWeatherConditions = etWeatherConditions;
    this.etWorkplanStartMp = etWorkplanStartMp;
    this.llInspectionType = llInspectionType;
    this.llMpValue = llMpValue;
    this.llNearbyAssets = llNearbyAssets;
    this.llStartMp = llStartMp;
    this.llTraverseTrack = llTraverseTrack;
    this.llWeatherConditions = llWeatherConditions;
    this.rbActionClass1 = rbActionClass1;
    this.rbActionClass2 = rbActionClass2;
    this.rbInspectionType1 = rbInspectionType1;
    this.rbInspectionType2 = rbInspectionType2;
    this.rbInspectionType3 = rbInspectionType3;
    this.rgInspectionType = rgInspectionType;
    this.rgTraverseType = rgTraverseType;
    this.spAssetsAhead = spAssetsAhead;
    this.spAssetsBehind = spAssetsBehind;
    this.spTemperature = spTemperature;
    this.spTraverseTrack = spTraverseTrack;
    this.tiStartMp = tiStartMp;
    this.tvAssetAhead = tvAssetAhead;
    this.tvAssetBehind = tvAssetBehind;
    this.tvStartMpTitle = tvStartMpTitle;
    this.tvTempSign = tvTempSign;
    this.tvTitleMpRange = tvTitleMpRange;
    this.tvTitleMsgWpStartMp = tvTitleMsgWpStartMp;
    this.tvTraverseTrackMsg = tvTraverseTrackMsg;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentStartInspectionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentStartInspectionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_start_inspection, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentStartInspectionBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_cancel;
      Button btnCancel = rootView.findViewById(id);
      if (btnCancel == null) {
        break missingId;
      }

      id = R.id.btn_ok;
      Button btnOk = rootView.findViewById(id);
      if (btnOk == null) {
        break missingId;
      }

      id = R.id.et_inspection_type_description;
      EditText etInspectionTypeDescription = rootView.findViewById(id);
      if (etInspectionTypeDescription == null) {
        break missingId;
      }

      id = R.id.et_selected_nearby_asset;
      EditText etSelectedNearbyAsset = rootView.findViewById(id);
      if (etSelectedNearbyAsset == null) {
        break missingId;
      }

      id = R.id.et_weather_conditions;
      EditText etWeatherConditions = rootView.findViewById(id);
      if (etWeatherConditions == null) {
        break missingId;
      }

      id = R.id.et_workplan_start_mp;
      EditText etWorkplanStartMp = rootView.findViewById(id);
      if (etWorkplanStartMp == null) {
        break missingId;
      }

      id = R.id.ll_inspection_type;
      LinearLayout llInspectionType = rootView.findViewById(id);
      if (llInspectionType == null) {
        break missingId;
      }

      id = R.id.ll_mp_value;
      LinearLayout llMpValue = rootView.findViewById(id);
      if (llMpValue == null) {
        break missingId;
      }

      id = R.id.ll_nearby_assets;
      LinearLayout llNearbyAssets = rootView.findViewById(id);
      if (llNearbyAssets == null) {
        break missingId;
      }

      id = R.id.ll_start_mp;
      LinearLayout llStartMp = rootView.findViewById(id);
      if (llStartMp == null) {
        break missingId;
      }

      id = R.id.ll_traverse_track;
      LinearLayout llTraverseTrack = rootView.findViewById(id);
      if (llTraverseTrack == null) {
        break missingId;
      }

      id = R.id.ll_weather_conditions;
      LinearLayout llWeatherConditions = rootView.findViewById(id);
      if (llWeatherConditions == null) {
        break missingId;
      }

      id = R.id.rb_action_class1;
      RadioButton rbActionClass1 = rootView.findViewById(id);
      if (rbActionClass1 == null) {
        break missingId;
      }

      id = R.id.rb_action_class2;
      RadioButton rbActionClass2 = rootView.findViewById(id);
      if (rbActionClass2 == null) {
        break missingId;
      }

      id = R.id.rb_inspection_type_1;
      RadioButton rbInspectionType1 = rootView.findViewById(id);
      if (rbInspectionType1 == null) {
        break missingId;
      }

      id = R.id.rb_inspection_type_2;
      RadioButton rbInspectionType2 = rootView.findViewById(id);
      if (rbInspectionType2 == null) {
        break missingId;
      }

      id = R.id.rb_inspection_type_3;
      RadioButton rbInspectionType3 = rootView.findViewById(id);
      if (rbInspectionType3 == null) {
        break missingId;
      }

      id = R.id.rg_inspection_type;
      RadioGroup rgInspectionType = rootView.findViewById(id);
      if (rgInspectionType == null) {
        break missingId;
      }

      id = R.id.rg_traverse_type;
      RadioGroup rgTraverseType = rootView.findViewById(id);
      if (rgTraverseType == null) {
        break missingId;
      }

      id = R.id.sp_assets_ahead;
      Spinner spAssetsAhead = rootView.findViewById(id);
      if (spAssetsAhead == null) {
        break missingId;
      }

      id = R.id.sp_assets_behind;
      Spinner spAssetsBehind = rootView.findViewById(id);
      if (spAssetsBehind == null) {
        break missingId;
      }

      id = R.id.sp_temperature;
      Spinner spTemperature = rootView.findViewById(id);
      if (spTemperature == null) {
        break missingId;
      }

      id = R.id.sp_traverse_track;
      Spinner spTraverseTrack = rootView.findViewById(id);
      if (spTraverseTrack == null) {
        break missingId;
      }

      id = R.id.ti_start_mp;
      TextInputLayout tiStartMp = rootView.findViewById(id);
      if (tiStartMp == null) {
        break missingId;
      }

      id = R.id.tv_asset_ahead;
      TextView tvAssetAhead = rootView.findViewById(id);
      if (tvAssetAhead == null) {
        break missingId;
      }

      id = R.id.tv_asset_behind;
      TextView tvAssetBehind = rootView.findViewById(id);
      if (tvAssetBehind == null) {
        break missingId;
      }

      id = R.id.tv_start_mp_title;
      TextView tvStartMpTitle = rootView.findViewById(id);
      if (tvStartMpTitle == null) {
        break missingId;
      }

      id = R.id.tv_temp_sign;
      TextView tvTempSign = rootView.findViewById(id);
      if (tvTempSign == null) {
        break missingId;
      }

      id = R.id.tv_title_mp_range;
      TextView tvTitleMpRange = rootView.findViewById(id);
      if (tvTitleMpRange == null) {
        break missingId;
      }

      id = R.id.tv_title_msg_wp_start_mp;
      TextView tvTitleMsgWpStartMp = rootView.findViewById(id);
      if (tvTitleMsgWpStartMp == null) {
        break missingId;
      }

      id = R.id.tv_traverse_track_msg;
      TextView tvTraverseTrackMsg = rootView.findViewById(id);
      if (tvTraverseTrackMsg == null) {
        break missingId;
      }

      return new FragmentStartInspectionBinding((ScrollView) rootView, btnCancel, btnOk,
          etInspectionTypeDescription, etSelectedNearbyAsset, etWeatherConditions,
          etWorkplanStartMp, llInspectionType, llMpValue, llNearbyAssets, llStartMp,
          llTraverseTrack, llWeatherConditions, rbActionClass1, rbActionClass2, rbInspectionType1,
          rbInspectionType2, rbInspectionType3, rgInspectionType, rgTraverseType, spAssetsAhead,
          spAssetsBehind, spTemperature, spTraverseTrack, tiStartMp, tvAssetAhead, tvAssetBehind,
          tvStartMpTitle, tvTempSign, tvTitleMpRange, tvTitleMsgWpStartMp, tvTraverseTrackMsg);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
