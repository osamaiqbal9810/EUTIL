// Generated by view binder compiler. Do not edit!
package com.app.ps19.elecapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.app.ps19.elecapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityScribbleNotesBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView imgBackAsn;

  @NonNull
  public final ImageView imgClearAsn;

  @NonNull
  public final RelativeLayout signImageParent;

  @NonNull
  public final TextView tvAboveLine;

  private ActivityScribbleNotesBinding(@NonNull LinearLayout rootView,
      @NonNull ImageView imgBackAsn, @NonNull ImageView imgClearAsn,
      @NonNull RelativeLayout signImageParent, @NonNull TextView tvAboveLine) {
    this.rootView = rootView;
    this.imgBackAsn = imgBackAsn;
    this.imgClearAsn = imgClearAsn;
    this.signImageParent = signImageParent;
    this.tvAboveLine = tvAboveLine;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityScribbleNotesBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityScribbleNotesBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_scribble_notes, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityScribbleNotesBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imgBack_asn;
      ImageView imgBackAsn = rootView.findViewById(id);
      if (imgBackAsn == null) {
        break missingId;
      }

      id = R.id.imgClear_asn;
      ImageView imgClearAsn = rootView.findViewById(id);
      if (imgClearAsn == null) {
        break missingId;
      }

      id = R.id.signImageParent;
      RelativeLayout signImageParent = rootView.findViewById(id);
      if (signImageParent == null) {
        break missingId;
      }

      id = R.id.tv_above_line;
      TextView tvAboveLine = rootView.findViewById(id);
      if (tvAboveLine == null) {
        break missingId;
      }

      return new ActivityScribbleNotesBinding((LinearLayout) rootView, imgBackAsn, imgClearAsn,
          signImageParent, tvAboveLine);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
