// Generated by view binder compiler. Do not edit!
package com.app.ps19.elecapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.FrameLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.app.ps19.elecapp.R;
import com.app.ps19.elecapp.Shared.TemplatePlanCompletionView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentCompletionBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final TemplatePlanCompletionView tcUnitCompletion;

  @NonNull
  public final TemplatePlanCompletionView tcUnitCompletion1;

  @NonNull
  public final TextView tvTrackNameFc;

  @NonNull
  public final WebView webViewFc;

  private FragmentCompletionBinding(@NonNull FrameLayout rootView,
      @NonNull TemplatePlanCompletionView tcUnitCompletion,
      @NonNull TemplatePlanCompletionView tcUnitCompletion1, @NonNull TextView tvTrackNameFc,
      @NonNull WebView webViewFc) {
    this.rootView = rootView;
    this.tcUnitCompletion = tcUnitCompletion;
    this.tcUnitCompletion1 = tcUnitCompletion1;
    this.tvTrackNameFc = tvTrackNameFc;
    this.webViewFc = webViewFc;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentCompletionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentCompletionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_completion, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentCompletionBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.tcUnitCompletion;
      TemplatePlanCompletionView tcUnitCompletion = rootView.findViewById(id);
      if (tcUnitCompletion == null) {
        break missingId;
      }

      id = R.id.tcUnitCompletion1;
      TemplatePlanCompletionView tcUnitCompletion1 = rootView.findViewById(id);
      if (tcUnitCompletion1 == null) {
        break missingId;
      }

      id = R.id.tvTrackName_fc;
      TextView tvTrackNameFc = rootView.findViewById(id);
      if (tvTrackNameFc == null) {
        break missingId;
      }

      id = R.id.webView_fc;
      WebView webViewFc = rootView.findViewById(id);
      if (webViewFc == null) {
        break missingId;
      }

      return new FragmentCompletionBinding((FrameLayout) rootView, tcUnitCompletion,
          tcUnitCompletion1, tvTrackNameFc, webViewFc);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
