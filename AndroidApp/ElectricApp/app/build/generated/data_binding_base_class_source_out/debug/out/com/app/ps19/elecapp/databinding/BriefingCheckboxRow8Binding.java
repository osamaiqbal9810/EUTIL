// Generated by view binder compiler. Do not edit!
package com.app.ps19.elecapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.app.ps19.elecapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class BriefingCheckboxRow8Binding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final CheckBox checkBoxFt;

  @NonNull
  public final CheckBox checkBoxItd;

  @NonNull
  public final CheckBox checkBoxOos;

  @NonNull
  public final CheckBox checkBoxTaw;

  @NonNull
  public final CheckBox checkBoxWz;

  private BriefingCheckboxRow8Binding(@NonNull LinearLayout rootView, @NonNull CheckBox checkBoxFt,
      @NonNull CheckBox checkBoxItd, @NonNull CheckBox checkBoxOos, @NonNull CheckBox checkBoxTaw,
      @NonNull CheckBox checkBoxWz) {
    this.rootView = rootView;
    this.checkBoxFt = checkBoxFt;
    this.checkBoxItd = checkBoxItd;
    this.checkBoxOos = checkBoxOos;
    this.checkBoxTaw = checkBoxTaw;
    this.checkBoxWz = checkBoxWz;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static BriefingCheckboxRow8Binding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static BriefingCheckboxRow8Binding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.briefing_checkbox_row_8, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static BriefingCheckboxRow8Binding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.checkBox_ft;
      CheckBox checkBoxFt = rootView.findViewById(id);
      if (checkBoxFt == null) {
        break missingId;
      }

      id = R.id.checkBox_itd;
      CheckBox checkBoxItd = rootView.findViewById(id);
      if (checkBoxItd == null) {
        break missingId;
      }

      id = R.id.checkBox_oos;
      CheckBox checkBoxOos = rootView.findViewById(id);
      if (checkBoxOos == null) {
        break missingId;
      }

      id = R.id.checkBox_taw;
      CheckBox checkBoxTaw = rootView.findViewById(id);
      if (checkBoxTaw == null) {
        break missingId;
      }

      id = R.id.checkBox_wz;
      CheckBox checkBoxWz = rootView.findViewById(id);
      if (checkBoxWz == null) {
        break missingId;
      }

      return new BriefingCheckboxRow8Binding((LinearLayout) rootView, checkBoxFt, checkBoxItd,
          checkBoxOos, checkBoxTaw, checkBoxWz);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
