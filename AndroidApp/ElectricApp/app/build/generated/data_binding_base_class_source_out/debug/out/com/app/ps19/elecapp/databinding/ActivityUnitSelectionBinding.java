// Generated by view binder compiler. Do not edit!
package com.app.ps19.elecapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.app.ps19.elecapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityUnitSelectionBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView ivListSortedIndicator;

  @NonNull
  public final ImageView ivListStaticIndicator;

  @NonNull
  public final ImageView ivUnitPerson;

  @NonNull
  public final ListView lvSortedUnits;

  @NonNull
  public final ListView lvStaticUnits;

  @NonNull
  public final RelativeLayout rlSortedList;

  @NonNull
  public final RelativeLayout rlStaticList;

  @NonNull
  public final TextView tvLocationTitle;

  @NonNull
  public final TextView tvUnitYourLocation;

  @NonNull
  public final TextView unitLocLat;

  @NonNull
  public final TextView unitLocLong;

  private ActivityUnitSelectionBinding(@NonNull LinearLayout rootView,
      @NonNull ImageView ivListSortedIndicator, @NonNull ImageView ivListStaticIndicator,
      @NonNull ImageView ivUnitPerson, @NonNull ListView lvSortedUnits,
      @NonNull ListView lvStaticUnits, @NonNull RelativeLayout rlSortedList,
      @NonNull RelativeLayout rlStaticList, @NonNull TextView tvLocationTitle,
      @NonNull TextView tvUnitYourLocation, @NonNull TextView unitLocLat,
      @NonNull TextView unitLocLong) {
    this.rootView = rootView;
    this.ivListSortedIndicator = ivListSortedIndicator;
    this.ivListStaticIndicator = ivListStaticIndicator;
    this.ivUnitPerson = ivUnitPerson;
    this.lvSortedUnits = lvSortedUnits;
    this.lvStaticUnits = lvStaticUnits;
    this.rlSortedList = rlSortedList;
    this.rlStaticList = rlStaticList;
    this.tvLocationTitle = tvLocationTitle;
    this.tvUnitYourLocation = tvUnitYourLocation;
    this.unitLocLat = unitLocLat;
    this.unitLocLong = unitLocLong;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityUnitSelectionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityUnitSelectionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_unit_selection, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityUnitSelectionBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.iv_list_sorted_indicator;
      ImageView ivListSortedIndicator = rootView.findViewById(id);
      if (ivListSortedIndicator == null) {
        break missingId;
      }

      id = R.id.iv_list_static_indicator;
      ImageView ivListStaticIndicator = rootView.findViewById(id);
      if (ivListStaticIndicator == null) {
        break missingId;
      }

      id = R.id.iv_unit_person;
      ImageView ivUnitPerson = rootView.findViewById(id);
      if (ivUnitPerson == null) {
        break missingId;
      }

      id = R.id.lv_sorted_units;
      ListView lvSortedUnits = rootView.findViewById(id);
      if (lvSortedUnits == null) {
        break missingId;
      }

      id = R.id.lv_static_units;
      ListView lvStaticUnits = rootView.findViewById(id);
      if (lvStaticUnits == null) {
        break missingId;
      }

      id = R.id.rl_sorted_list;
      RelativeLayout rlSortedList = rootView.findViewById(id);
      if (rlSortedList == null) {
        break missingId;
      }

      id = R.id.rl_static_list;
      RelativeLayout rlStaticList = rootView.findViewById(id);
      if (rlStaticList == null) {
        break missingId;
      }

      id = R.id.tv_location_title;
      TextView tvLocationTitle = rootView.findViewById(id);
      if (tvLocationTitle == null) {
        break missingId;
      }

      id = R.id.tv_unit_your_location;
      TextView tvUnitYourLocation = rootView.findViewById(id);
      if (tvUnitYourLocation == null) {
        break missingId;
      }

      id = R.id.unit_loc_lat;
      TextView unitLocLat = rootView.findViewById(id);
      if (unitLocLat == null) {
        break missingId;
      }

      id = R.id.unit_loc_long;
      TextView unitLocLong = rootView.findViewById(id);
      if (unitLocLong == null) {
        break missingId;
      }

      return new ActivityUnitSelectionBinding((LinearLayout) rootView, ivListSortedIndicator,
          ivListStaticIndicator, ivUnitPerson, lvSortedUnits, lvStaticUnits, rlSortedList,
          rlStaticList, tvLocationTitle, tvUnitYourLocation, unitLocLat, unitLocLong);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
