// Generated by view binder compiler. Do not edit!
package com.app.ps19.elecapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.app.ps19.elecapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSessionSecondLevelViewBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView imgClockIconMa;

  @NonNull
  public final ImageView imgMpEndValue;

  @NonNull
  public final LinearLayout llInspectionTask;

  @NonNull
  public final LinearLayout llSession;

  @NonNull
  public final LinearLayout llSessionGroup;

  @NonNull
  public final LinearLayout llSessionMPDetails;

  @NonNull
  public final LinearLayout llTimeDetails;

  @NonNull
  public final RelativeLayout rlSession;

  @NonNull
  public final RelativeLayout rlSessionDetails;

  @NonNull
  public final TextView tvSessionDuration;

  @NonNull
  public final TextView tvSessionEnd;

  @NonNull
  public final TextView tvSessionEndMP;

  @NonNull
  public final TextView tvSessionStartMP;

  @NonNull
  public final TextView tvSessionTitle;

  private FragmentSessionSecondLevelViewBinding(@NonNull LinearLayout rootView,
      @NonNull ImageView imgClockIconMa, @NonNull ImageView imgMpEndValue,
      @NonNull LinearLayout llInspectionTask, @NonNull LinearLayout llSession,
      @NonNull LinearLayout llSessionGroup, @NonNull LinearLayout llSessionMPDetails,
      @NonNull LinearLayout llTimeDetails, @NonNull RelativeLayout rlSession,
      @NonNull RelativeLayout rlSessionDetails, @NonNull TextView tvSessionDuration,
      @NonNull TextView tvSessionEnd, @NonNull TextView tvSessionEndMP,
      @NonNull TextView tvSessionStartMP, @NonNull TextView tvSessionTitle) {
    this.rootView = rootView;
    this.imgClockIconMa = imgClockIconMa;
    this.imgMpEndValue = imgMpEndValue;
    this.llInspectionTask = llInspectionTask;
    this.llSession = llSession;
    this.llSessionGroup = llSessionGroup;
    this.llSessionMPDetails = llSessionMPDetails;
    this.llTimeDetails = llTimeDetails;
    this.rlSession = rlSession;
    this.rlSessionDetails = rlSessionDetails;
    this.tvSessionDuration = tvSessionDuration;
    this.tvSessionEnd = tvSessionEnd;
    this.tvSessionEndMP = tvSessionEndMP;
    this.tvSessionStartMP = tvSessionStartMP;
    this.tvSessionTitle = tvSessionTitle;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSessionSecondLevelViewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSessionSecondLevelViewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_session_second_level_view, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSessionSecondLevelViewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imgClockIcon_ma;
      ImageView imgClockIconMa = rootView.findViewById(id);
      if (imgClockIconMa == null) {
        break missingId;
      }

      id = R.id.imgMpEndValue;
      ImageView imgMpEndValue = rootView.findViewById(id);
      if (imgMpEndValue == null) {
        break missingId;
      }

      id = R.id.ll_inspection_task;
      LinearLayout llInspectionTask = rootView.findViewById(id);
      if (llInspectionTask == null) {
        break missingId;
      }

      id = R.id.ll_session;
      LinearLayout llSession = rootView.findViewById(id);
      if (llSession == null) {
        break missingId;
      }

      LinearLayout llSessionGroup = (LinearLayout) rootView;

      id = R.id.ll_session_MP_details;
      LinearLayout llSessionMPDetails = rootView.findViewById(id);
      if (llSessionMPDetails == null) {
        break missingId;
      }

      id = R.id.ll_time_details;
      LinearLayout llTimeDetails = rootView.findViewById(id);
      if (llTimeDetails == null) {
        break missingId;
      }

      id = R.id.rl_session;
      RelativeLayout rlSession = rootView.findViewById(id);
      if (rlSession == null) {
        break missingId;
      }

      id = R.id.rl_session_details;
      RelativeLayout rlSessionDetails = rootView.findViewById(id);
      if (rlSessionDetails == null) {
        break missingId;
      }

      id = R.id.tv_session_duration;
      TextView tvSessionDuration = rootView.findViewById(id);
      if (tvSessionDuration == null) {
        break missingId;
      }

      id = R.id.tv_session_end;
      TextView tvSessionEnd = rootView.findViewById(id);
      if (tvSessionEnd == null) {
        break missingId;
      }

      id = R.id.tv_session_endMP;
      TextView tvSessionEndMP = rootView.findViewById(id);
      if (tvSessionEndMP == null) {
        break missingId;
      }

      id = R.id.tv_session_startMP;
      TextView tvSessionStartMP = rootView.findViewById(id);
      if (tvSessionStartMP == null) {
        break missingId;
      }

      id = R.id.tv_session_title;
      TextView tvSessionTitle = rootView.findViewById(id);
      if (tvSessionTitle == null) {
        break missingId;
      }

      return new FragmentSessionSecondLevelViewBinding((LinearLayout) rootView, imgClockIconMa,
          imgMpEndValue, llInspectionTask, llSession, llSessionGroup, llSessionMPDetails,
          llTimeDetails, rlSession, rlSessionDetails, tvSessionDuration, tvSessionEnd,
          tvSessionEndMP, tvSessionStartMP, tvSessionTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
