// Generated by view binder compiler. Do not edit!
package com.app.ps19.elecapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.app.ps19.elecapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ContentSessionDashboardBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageButton ibSessionsListExpand;

  @NonNull
  public final ImageView ivSessionActionBtn;

  @NonNull
  public final ImageView ivSessionElapTime;

  @NonNull
  public final ImageView ivSessionsListTitle;

  @NonNull
  public final ImageView ivSessionsTitle;

  @NonNull
  public final LinearLayout llContentSessionDashboard;

  @NonNull
  public final LinearLayout llIssuesDetails;

  @NonNull
  public final LinearLayout llSessionDetailsContainer;

  @NonNull
  public final LinearLayout llSessionLimit;

  @NonNull
  public final LinearLayout llSessionStart;

  @NonNull
  public final LinearLayout llSessionsStatus;

  @NonNull
  public final ListView lvSessions;

  @NonNull
  public final RelativeLayout rlIssuesReported;

  @NonNull
  public final RelativeLayout rlSessionStart;

  @NonNull
  public final RelativeLayout rlSessions;

  @NonNull
  public final RelativeLayout rlSessionsTitle;

  @NonNull
  public final TextView textView3;

  @NonNull
  public final TextView tvEndMpPrefix;

  @NonNull
  public final TextView tvSessionActionButton;

  @NonNull
  public final TextView tvSessionElapDays;

  @NonNull
  public final TextView tvSessionElapHours;

  @NonNull
  public final TextView tvSessionElapMin;

  @NonNull
  public final TextView tvSessionExpEndMp;

  @NonNull
  public final TextView tvSessionExpEndTime;

  @NonNull
  public final TextView tvSessionStartMp;

  @NonNull
  public final TextView tvSessionStartTime;

  @NonNull
  public final TextView tvSessionsInspectionTitle;

  @NonNull
  public final TextView tvStartMpPrefix;

  @NonNull
  public final View vDividerIssues;

  @NonNull
  public final View vDividerTask;

  private ContentSessionDashboardBinding(@NonNull LinearLayout rootView,
      @NonNull ImageButton ibSessionsListExpand, @NonNull ImageView ivSessionActionBtn,
      @NonNull ImageView ivSessionElapTime, @NonNull ImageView ivSessionsListTitle,
      @NonNull ImageView ivSessionsTitle, @NonNull LinearLayout llContentSessionDashboard,
      @NonNull LinearLayout llIssuesDetails, @NonNull LinearLayout llSessionDetailsContainer,
      @NonNull LinearLayout llSessionLimit, @NonNull LinearLayout llSessionStart,
      @NonNull LinearLayout llSessionsStatus, @NonNull ListView lvSessions,
      @NonNull RelativeLayout rlIssuesReported, @NonNull RelativeLayout rlSessionStart,
      @NonNull RelativeLayout rlSessions, @NonNull RelativeLayout rlSessionsTitle,
      @NonNull TextView textView3, @NonNull TextView tvEndMpPrefix,
      @NonNull TextView tvSessionActionButton, @NonNull TextView tvSessionElapDays,
      @NonNull TextView tvSessionElapHours, @NonNull TextView tvSessionElapMin,
      @NonNull TextView tvSessionExpEndMp, @NonNull TextView tvSessionExpEndTime,
      @NonNull TextView tvSessionStartMp, @NonNull TextView tvSessionStartTime,
      @NonNull TextView tvSessionsInspectionTitle, @NonNull TextView tvStartMpPrefix,
      @NonNull View vDividerIssues, @NonNull View vDividerTask) {
    this.rootView = rootView;
    this.ibSessionsListExpand = ibSessionsListExpand;
    this.ivSessionActionBtn = ivSessionActionBtn;
    this.ivSessionElapTime = ivSessionElapTime;
    this.ivSessionsListTitle = ivSessionsListTitle;
    this.ivSessionsTitle = ivSessionsTitle;
    this.llContentSessionDashboard = llContentSessionDashboard;
    this.llIssuesDetails = llIssuesDetails;
    this.llSessionDetailsContainer = llSessionDetailsContainer;
    this.llSessionLimit = llSessionLimit;
    this.llSessionStart = llSessionStart;
    this.llSessionsStatus = llSessionsStatus;
    this.lvSessions = lvSessions;
    this.rlIssuesReported = rlIssuesReported;
    this.rlSessionStart = rlSessionStart;
    this.rlSessions = rlSessions;
    this.rlSessionsTitle = rlSessionsTitle;
    this.textView3 = textView3;
    this.tvEndMpPrefix = tvEndMpPrefix;
    this.tvSessionActionButton = tvSessionActionButton;
    this.tvSessionElapDays = tvSessionElapDays;
    this.tvSessionElapHours = tvSessionElapHours;
    this.tvSessionElapMin = tvSessionElapMin;
    this.tvSessionExpEndMp = tvSessionExpEndMp;
    this.tvSessionExpEndTime = tvSessionExpEndTime;
    this.tvSessionStartMp = tvSessionStartMp;
    this.tvSessionStartTime = tvSessionStartTime;
    this.tvSessionsInspectionTitle = tvSessionsInspectionTitle;
    this.tvStartMpPrefix = tvStartMpPrefix;
    this.vDividerIssues = vDividerIssues;
    this.vDividerTask = vDividerTask;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ContentSessionDashboardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ContentSessionDashboardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.content_session_dashboard, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ContentSessionDashboardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ib_sessions_list_expand;
      ImageButton ibSessionsListExpand = rootView.findViewById(id);
      if (ibSessionsListExpand == null) {
        break missingId;
      }

      id = R.id.iv_session_action_btn;
      ImageView ivSessionActionBtn = rootView.findViewById(id);
      if (ivSessionActionBtn == null) {
        break missingId;
      }

      id = R.id.iv_session_elap_time;
      ImageView ivSessionElapTime = rootView.findViewById(id);
      if (ivSessionElapTime == null) {
        break missingId;
      }

      id = R.id.iv_sessions_list_title;
      ImageView ivSessionsListTitle = rootView.findViewById(id);
      if (ivSessionsListTitle == null) {
        break missingId;
      }

      id = R.id.iv_sessions_title;
      ImageView ivSessionsTitle = rootView.findViewById(id);
      if (ivSessionsTitle == null) {
        break missingId;
      }

      LinearLayout llContentSessionDashboard = (LinearLayout) rootView;

      id = R.id.ll_issues_details;
      LinearLayout llIssuesDetails = rootView.findViewById(id);
      if (llIssuesDetails == null) {
        break missingId;
      }

      id = R.id.ll_session_details_container;
      LinearLayout llSessionDetailsContainer = rootView.findViewById(id);
      if (llSessionDetailsContainer == null) {
        break missingId;
      }

      id = R.id.ll_session_limit;
      LinearLayout llSessionLimit = rootView.findViewById(id);
      if (llSessionLimit == null) {
        break missingId;
      }

      id = R.id.ll_session_start;
      LinearLayout llSessionStart = rootView.findViewById(id);
      if (llSessionStart == null) {
        break missingId;
      }

      id = R.id.ll_sessions_status;
      LinearLayout llSessionsStatus = rootView.findViewById(id);
      if (llSessionsStatus == null) {
        break missingId;
      }

      id = R.id.lv_sessions;
      ListView lvSessions = rootView.findViewById(id);
      if (lvSessions == null) {
        break missingId;
      }

      id = R.id.rl_issues_reported;
      RelativeLayout rlIssuesReported = rootView.findViewById(id);
      if (rlIssuesReported == null) {
        break missingId;
      }

      id = R.id.rl_session_start;
      RelativeLayout rlSessionStart = rootView.findViewById(id);
      if (rlSessionStart == null) {
        break missingId;
      }

      id = R.id.rl_sessions;
      RelativeLayout rlSessions = rootView.findViewById(id);
      if (rlSessions == null) {
        break missingId;
      }

      id = R.id.rl_sessions_title;
      RelativeLayout rlSessionsTitle = rootView.findViewById(id);
      if (rlSessionsTitle == null) {
        break missingId;
      }

      id = R.id.textView3;
      TextView textView3 = rootView.findViewById(id);
      if (textView3 == null) {
        break missingId;
      }

      id = R.id.tv_end_mp_prefix;
      TextView tvEndMpPrefix = rootView.findViewById(id);
      if (tvEndMpPrefix == null) {
        break missingId;
      }

      id = R.id.tv_session_action_button;
      TextView tvSessionActionButton = rootView.findViewById(id);
      if (tvSessionActionButton == null) {
        break missingId;
      }

      id = R.id.tv_session_elap_days;
      TextView tvSessionElapDays = rootView.findViewById(id);
      if (tvSessionElapDays == null) {
        break missingId;
      }

      id = R.id.tv_session_elap_hours;
      TextView tvSessionElapHours = rootView.findViewById(id);
      if (tvSessionElapHours == null) {
        break missingId;
      }

      id = R.id.tv_session_elap_min;
      TextView tvSessionElapMin = rootView.findViewById(id);
      if (tvSessionElapMin == null) {
        break missingId;
      }

      id = R.id.tv_session_exp_end_mp;
      TextView tvSessionExpEndMp = rootView.findViewById(id);
      if (tvSessionExpEndMp == null) {
        break missingId;
      }

      id = R.id.tv_session_exp_end_time;
      TextView tvSessionExpEndTime = rootView.findViewById(id);
      if (tvSessionExpEndTime == null) {
        break missingId;
      }

      id = R.id.tv_session_start_mp;
      TextView tvSessionStartMp = rootView.findViewById(id);
      if (tvSessionStartMp == null) {
        break missingId;
      }

      id = R.id.tv_session_start_time;
      TextView tvSessionStartTime = rootView.findViewById(id);
      if (tvSessionStartTime == null) {
        break missingId;
      }

      id = R.id.tv_sessions_inspection_title;
      TextView tvSessionsInspectionTitle = rootView.findViewById(id);
      if (tvSessionsInspectionTitle == null) {
        break missingId;
      }

      id = R.id.tv_start_mp_prefix;
      TextView tvStartMpPrefix = rootView.findViewById(id);
      if (tvStartMpPrefix == null) {
        break missingId;
      }

      id = R.id.v_divider_issues;
      View vDividerIssues = rootView.findViewById(id);
      if (vDividerIssues == null) {
        break missingId;
      }

      id = R.id.v_divider_task;
      View vDividerTask = rootView.findViewById(id);
      if (vDividerTask == null) {
        break missingId;
      }

      return new ContentSessionDashboardBinding((LinearLayout) rootView, ibSessionsListExpand,
          ivSessionActionBtn, ivSessionElapTime, ivSessionsListTitle, ivSessionsTitle,
          llContentSessionDashboard, llIssuesDetails, llSessionDetailsContainer, llSessionLimit,
          llSessionStart, llSessionsStatus, lvSessions, rlIssuesReported, rlSessionStart,
          rlSessions, rlSessionsTitle, textView3, tvEndMpPrefix, tvSessionActionButton,
          tvSessionElapDays, tvSessionElapHours, tvSessionElapMin, tvSessionExpEndMp,
          tvSessionExpEndTime, tvSessionStartMp, tvSessionStartTime, tvSessionsInspectionTitle,
          tvStartMpPrefix, vDividerIssues, vDividerTask);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
