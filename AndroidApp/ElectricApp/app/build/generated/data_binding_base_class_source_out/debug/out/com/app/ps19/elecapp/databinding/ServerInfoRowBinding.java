// Generated by view binder compiler. Do not edit!
package com.app.ps19.elecapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.RadioButton;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.app.ps19.elecapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ServerInfoRowBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageButton btnEditServerEntry;

  @NonNull
  public final ImageButton btnRemoveServerEntry;

  @NonNull
  public final RadioButton rbServerInfo;

  @NonNull
  public final TextView tvServerInfo;

  private ServerInfoRowBinding(@NonNull LinearLayout rootView,
      @NonNull ImageButton btnEditServerEntry, @NonNull ImageButton btnRemoveServerEntry,
      @NonNull RadioButton rbServerInfo, @NonNull TextView tvServerInfo) {
    this.rootView = rootView;
    this.btnEditServerEntry = btnEditServerEntry;
    this.btnRemoveServerEntry = btnRemoveServerEntry;
    this.rbServerInfo = rbServerInfo;
    this.tvServerInfo = tvServerInfo;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ServerInfoRowBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ServerInfoRowBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.server_info_row, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ServerInfoRowBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnEditServerEntry;
      ImageButton btnEditServerEntry = rootView.findViewById(id);
      if (btnEditServerEntry == null) {
        break missingId;
      }

      id = R.id.btnRemoveServerEntry;
      ImageButton btnRemoveServerEntry = rootView.findViewById(id);
      if (btnRemoveServerEntry == null) {
        break missingId;
      }

      id = R.id.rbServerInfo;
      RadioButton rbServerInfo = rootView.findViewById(id);
      if (rbServerInfo == null) {
        break missingId;
      }

      id = R.id.tvServerInfo;
      TextView tvServerInfo = rootView.findViewById(id);
      if (tvServerInfo == null) {
        break missingId;
      }

      return new ServerInfoRowBinding((LinearLayout) rootView, btnEditServerEntry,
          btnRemoveServerEntry, rbServerInfo, tvServerInfo);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
